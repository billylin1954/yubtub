{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Outlet,Link,useParams}from\"react-router-dom\";import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Video(_ref){let{video}=_ref;function ComponentA(){let k=video.link;let j=k.replaceAll(\"/\",\"+\");console.log(j);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Link,{to:\"play/\".concat(j),children:\"play\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"video-item\",children:[/*#__PURE__*/_jsxs(\"video\",{className:\"video-thumbnail\",controls:true,children:[/*#__PURE__*/_jsx(\"source\",{src:video.link,type:\"video/mp4\"}),\"Your browser does not support the video tag.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"video-title\",children:video.name}),/*#__PURE__*/_jsx(ComponentA,{})]})]});}function Garage(){const[vids,setVids]=useState([]);useEffect(()=>{fetch('http://localhost:3001/api/data').then(response=>response.json()).then(result=>{if(Array.isArray(result.response)){setVids(result.response);// Assuming result.response is an array of objects with name and link\n}else{console.error('Unexpected API response format:',result);}}).catch(error=>{console.error('Error fetching data:',error);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"videos-grid\",children:vids.map((video,index)=>/*#__PURE__*/_jsx(Video,{video:video},index))});}function App(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"a\",{href:\"./upload.html\",children:\"Upload Video\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Yubtub\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Random Videos\"}),/*#__PURE__*/_jsx(Garage,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Outlet","Link","useParams","jsx","_jsx","jsxs","_jsxs","Video","_ref","video","ComponentA","k","link","j","replaceAll","console","log","className","children","to","concat","controls","src","type","name","Garage","vids","setVids","fetch","then","response","json","result","Array","isArray","error","catch","map","index","App","href"],"sources":["/Users/billylyn/Documents/yubtub/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet, Link ,useParams} from \"react-router-dom\";\nimport './App.css';\n\nfunction Video({ video }) {\n  function ComponentA() {\n   let k=video.link\n  let j=k.replaceAll(\"/\",\"+\")\n  console.log(j)\n    return (\n      <div className=\"App\">\n     \n    \n        <Link to={`play/${j}`}>play</Link>\n        \n      </div>\n    );\n  }\n  return (\n    <div className=\"video-item\">\n      <video className=\"video-thumbnail\" controls>\n        <source src={video.link} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n      <div className=\"video-info\">\n        <h3 className=\"video-title\">{video.name}</h3>\n    <ComponentA/>\n      </div>\n    </div>\n  );\n}\n\n\nfunction Garage() {\n  const [vids, setVids] = useState([]);\n  \n  useEffect(() => {\n    fetch('http://localhost:3001/api/data')\n    .then((response) => response.json())\n    .then((result) => {\n      if (Array.isArray(result.response)) {\n        setVids(result.response); // Assuming result.response is an array of objects with name and link\n      } else {\n        console.error('Unexpected API response format:', result);\n      }\n    })\n    .catch((error) => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  \n  return (\n    <div className=\"videos-grid\">\n      {vids.map((video, index) => (\n        <Video key={index} video={video} />\n      ))}\n    </div>\n  );\n}\nfunction App() {\n  return (\n    <div>\n      <header>\n        <a href=\"./upload.html\">Upload Video</a>\n        <h1>Yubtub</h1>\n      </header>\n      <h2>Random Videos</h2>\n      <Garage />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}